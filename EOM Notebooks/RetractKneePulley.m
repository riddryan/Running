function xdot = fstatederivative(t, x)

% Define constants

% Define forces: 

% State assignments
q1 = x(1); q2 = x(2); q3 = x(3); q4 = x(4); q5 = x(5); 
u1 = x(6); u2 = x(7); u3 = x(8); u4 = x(9); u5 = x(10); 

c3 = cos(q3); c4 = cos(q4); c5 = cos(q5); s3 = sin(q3); s4 = sin(q4); s5 = sin(q5); c3m4 = cos(q3 - q4); c3m5 = cos(q3 - q5); c4m5 = cos(q4 - q5); s3m4 = sin(q3 - q4); s3m5 = sin(q3 - q5); s4m5 = sin(q4 - q5); 

MM = zeros(5,5); rhs = zeros(5,1);

% Mass Matrix
MM(1,1) = mfoot + mknee + mpelvis; MM(1,2) = 0; MM(1,3) = -(s3*lthigh*(mfoot ...
+ mknee)); MM(1,4) = -(s4*lshank*mfoot); MM(1,5) = 0; 
MM(2,1) = MM(1,2); MM(2,2) = mfoot + mknee + mpelvis; MM(2,3) = ...
c3*lthigh*(mfoot + mknee); MM(2,4) = c4*lshank*mfoot; MM(2,5) = 0; 
MM(3,1) = MM(1,3); MM(3,2) = MM(2,3); MM(3,3) = (mfoot + ...
mknee)*(lthigh*lthigh); MM(3,4) = c3m4*lshank*lthigh*mfoot; MM(3,5) = 0; 
MM(4,1) = MM(1,4); MM(4,2) = MM(2,4); MM(4,3) = MM(3,4); MM(4,4) = ...
mfoot*(lshank*lshank); MM(4,5) = 0; 
MM(5,1) = MM(1,5); MM(5,2) = MM(2,5); MM(5,3) = MM(3,5); MM(5,4) = MM(4,5); ...
MM(5,5) = 0; 

% righthand side terms
rhs(1) = c3*lthigh*(mfoot + mknee)*(u3*u3) + c4*lshank*mfoot*(u4*u4) + ...
c5*kknee*lpulley*(1 - kneel*power(-2*c4m5*lpulley*lshank - ...
2*c3m5*lpulley*lthigh + 2*c3m4*lshank*lthigh + lpulley*lpulley + ...
lshank*lshank + lthigh*lthigh,-0.5)) + c4*kknee*lshank*(-1 + ...
kneel*power(-2*c4m5*lpulley*lshank - 2*c3m5*lpulley*lthigh + ...
2*c3m4*lshank*lthigh + lpulley*lpulley + lshank*lshank + lthigh*lthigh,-0.5)) ...
+ c3*kknee*lthigh*(-1 + kneel*power(-2*c4m5*lpulley*lshank - ...
2*c3m5*lpulley*lthigh + 2*c3m4*lshank*lthigh + lpulley*lpulley + ...
lshank*lshank + lthigh*lthigh,-0.5)) + 2*g*mfoot*sin(gslope) + ...
g*mpelvis*sin(gslope); 
rhs(2) = -2*g*mfoot*cos(gslope) - g*mpelvis*cos(gslope) + s3*lthigh*(mfoot + ...
mknee)*(u3*u3) + s4*lshank*mfoot*(u4*u4) + s5*kknee*lpulley*(1 - ...
kneel*power(-2*c4m5*lpulley*lshank - 2*c3m5*lpulley*lthigh + ...
2*c3m4*lshank*lthigh + lpulley*lpulley + lshank*lshank + lthigh*lthigh,-0.5)) ...
+ s4*kknee*lshank*(-1 + kneel*power(-2*c4m5*lpulley*lshank - ...
2*c3m5*lpulley*lthigh + 2*c3m4*lshank*lthigh + lpulley*lpulley + ...
lshank*lshank + lthigh*lthigh,-0.5)) + s3*kknee*lthigh*(-1 + ...
kneel*power(-2*c4m5*lpulley*lshank - 2*c3m5*lpulley*lthigh + ...
2*c3m4*lshank*lthigh + lpulley*lpulley + lshank*lshank + ...
lthigh*lthigh,-0.5)); 
rhs(3) = -(q3*khip) + hipl*khip - s3m5*kknee*lpulley*lthigh + ...
s3m4*kknee*lshank*lthigh - 2*g*lthigh*mfoot*cos(q3 - gslope) - ...
s3m4*lshank*lthigh*mfoot*(u4*u4) + ...
s3m5*kknee*kneel*lpulley*lthigh*power(-2*c4m5*lpulley*lshank - ...
2*c3m5*lpulley*lthigh + 2*c3m4*lshank*lthigh + lpulley*lpulley + ...
lshank*lshank + lthigh*lthigh,-0.5) - ...
s3m4*kknee*kneel*lshank*lthigh*power(-2*c4m5*lpulley*lshank - ...
2*c3m5*lpulley*lthigh + 2*c3m4*lshank*lthigh + lpulley*lpulley + ...
lshank*lshank + lthigh*lthigh,-0.5); 
rhs(4) = lshank*(-(g*mfoot*cos(q4 - gslope)) + s3m4*lthigh*mfoot*(u3*u3) - ...
kknee*(s4m5*lpulley + s3m4*lthigh)*power(-2*c4m5*lpulley*lshank - ...
2*c3m5*lpulley*lthigh + 2*c3m4*lshank*lthigh + lpulley*lpulley + ...
lshank*lshank + lthigh*lthigh,-0.5)*(-kneel + power(-2*c4m5*lpulley*lshank - ...
2*c3m5*lpulley*lthigh + 2*c3m4*lshank*lthigh + lpulley*lpulley + ...
lshank*lshank + lthigh*lthigh,0.5))); 
rhs(5) = 0; 

udot = MM\rhs;
xdot = [x(5+1:10); udot];

kineticEnergy = (2*c3m4*u3*u4*lshank*lthigh*mfoot + 2*u2*(c4*u4*lshank*mfoot ...
+ c3*u3*lthigh*(1 + mfoot)) - 2*u1*(s4*u4*lshank*mfoot + s3*u3*lthigh*(1 + ...
mfoot)) + (1 + mfoot)*(u1*u1) + (1 + mfoot)*(u2*u2) + ...
mfoot*(u4*u4)*(lshank*lshank) + u3*u3*(lthigh*lthigh) + ...
mfoot*(u3*u3)*(lthigh*lthigh))/2.;

potentialEnergy = (2*q2*g*cos(gslope) + khip*((-q3 + hipl)*(-q3 + hipl)) + ...
kknee*((kneel - power(power(-(c5*lpulley) + c4*lshank + c3*lthigh,2) + ...
power(-(s5*lpulley) + s4*lshank + s3*lthigh,2),0.5))*(kneel - ...
power(power(-(c5*lpulley) + c4*lshank + c3*lthigh,2) + power(-(s5*lpulley) + ...
s4*lshank + s3*lthigh,2),0.5))) + 2*g*lthigh*sin(q3 - gslope) - ...
2*q1*g*sin(gslope) - 2*g*mfoot*(-(q2*cos(gslope)) - lthigh*sin(q3 - gslope) - ...
lshank*sin(q4 - gslope) + q1*sin(gslope)))/2.;

PEgrav = q2*g*cos(gslope) + g*lthigh*sin(q3 - gslope) - q1*g*sin(gslope) - ...
mfoot*(-(q2*g*cos(gslope)) - s4*g*lshank*cos(gslope) - g*lthigh*sin(q3 - ...
gslope) + q1*g*sin(gslope) + c4*g*lshank*sin(gslope));

PEspring = (khip*((q3 - hipl)*(q3 - hipl)))/2. + (kknee*((-kneel + ...
power(power(-(c5*lpulley) + c4*lshank + c3*lthigh,2) + power(-(s5*lpulley) + ...
s4*lshank + s3*lthigh,2),0.5))*(-kneel + power(power(-(c5*lpulley) + ...
c4*lshank + c3*lthigh,2) + power(-(s5*lpulley) + s4*lshank + ...
s3*lthigh,2),0.5))))/2.;

points.foot(1) = q1 + c4*lshank + c3*lthigh; 
points.foot(2) = q2 + s4*lshank + s3*lthigh; 


points.knee(1) = q1 + c3*lthigh; 
points.knee(2) = q2 + s3*lthigh; 


points.pelvis(1) = q1; 
points.pelvis(2) = q2; 


points.COM(1) = q1; 
points.COM(2) = q2; 


points.pulley(1) = q1 + c5*lpulley; 
points.pulley(2) = q2 + s5*lpulley; 


vels.foot(1) = u1 - s4*u4*lshank - s3*u3*lthigh; 
vels.foot(2) = u2 + c4*u4*lshank + c3*u3*lthigh; 


vels.knee(1) = u1 - s3*u3*lthigh; 
vels.knee(2) = u2 + c3*u3*lthigh; 


vels.pelvis(1) = u1; 
vels.pelvis(2) = u2; 


vels.pulley(1) = u1 - s5*u5*lpulley; 
vels.pulley(2) = u2 + c5*u5*lpulley; 


vels.COM(1) = u1; 
vels.COM(2) = u2; 


MM(1,1) = (1 + mfoot)*(lthigh*lthigh); MM(1,2) = c3m4*lshank*lthigh*mfoot; ...
MM(1,3) = 0; 
MM(2,1) = MM(1,2); MM(2,2) = mfoot*(lshank*lshank); MM(2,3) = 0; 
MM(3,1) = MM(1,3); MM(3,2) = MM(2,3); MM(3,3) = 0; 


rhs(1) = -(q3*khip) + hipl*khip - s3m5*kknee*lpulley*lthigh + ...
s3m4*kknee*lshank*lthigh - c3m4*lshank*lthigh*mfoot*ypacc - ...
2*g*lthigh*mfoot*cos(q3 - gslope) - s3m4*lshank*lthigh*mfoot*(u4*u4) - (1 + ...
mfoot)*xpacc*(lthigh*lthigh) + ...
s3m5*kknee*kneel*lpulley*lthigh*power(-2*c4m5*lpulley*lshank - ...
2*c3m5*lpulley*lthigh + 2*c3m4*lshank*lthigh + lpulley*lpulley + ...
lshank*lshank + lthigh*lthigh,-0.5) - ...
s3m4*kknee*kneel*lshank*lthigh*power(-2*c4m5*lpulley*lshank - ...
2*c3m5*lpulley*lthigh + 2*c3m4*lshank*lthigh + lpulley*lpulley + ...
lshank*lshank + lthigh*lthigh,-0.5); 
rhs(2) = -(c3m4*lshank*lthigh*mfoot*xpacc) - mfoot*ypacc*(lshank*lshank) + ...
lshank*(-(g*mfoot*cos(q4 - gslope)) + s3m4*lthigh*mfoot*(u3*u3) - ...
kknee*(s4m5*lpulley + s3m4*lthigh)*power(-2*c4m5*lpulley*lshank - ...
2*c3m5*lpulley*lthigh + 2*c3m4*lshank*lthigh + lpulley*lpulley + ...
lshank*lshank + lthigh*lthigh,-0.5)*(-kneel + power(-2*c4m5*lpulley*lshank - ...
2*c3m5*lpulley*lthigh + 2*c3m4*lshank*lthigh + lpulley*lpulley + ...
lshank*lshank + lthigh*lthigh,0.5))); 
rhs(3) = 0; 


CPulleyLock(1,1) = 0; CPulleyLock(1,2) = 0; CPulleyLock(1,3) = 1; 


CPulleyLockDot(1,1) = 0; CPulleyLockDot(1,2) = 0; CPulleyLockDot(1,3) = 0; 


CPulleyFree(1,1) = 0; CPulleyFree(1,2) = 0; CPulleyFree(1,3) = 0; 


CPulleyFreeDot(1,1) = 0; CPulleyFreeDot(1,2) = 0; CPulleyFreeDot(1,3) = 0; 


CKneeLock(1,1) = 0; CKneeLock(1,2) = 0; CKneeLock(1,3) = 0; 
CKneeLock(2,1) = -1; CKneeLock(2,2) = 1; CKneeLock(2,3) = 0; 


CKneeLockDot(1,1) = 0; CKneeLockDot(1,2) = 0; CKneeLockDot(1,3) = 0; 
CKneeLockDot(2,1) = 0; CKneeLockDot(2,2) = 0; CKneeLockDot(2,3) = 0; 

